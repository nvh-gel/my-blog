{"version":3,"file":"static/js/445.ea07b1dc.chunk.js","mappings":"2QAyFA,EA5Ec,SAAAA,IAAAC,EAAAA,EAAAA,GAAAC,EAAAF,GAAA,IAAAG,GAAAC,EAAAA,EAAAA,GAAAF,GACZ,SAAAA,EAAYG,GAAuB,IAADC,EAQe,OARfC,EAAAA,EAAAA,GAAA,KAAAL,IAChCI,EAAAH,EAAAK,KAAA,KAAMH,IACDI,MAAQ,CACXC,kBAAkB,EAClBC,kBAAcC,GAGhBN,EAAKO,YAAcP,EAAKO,YAAYC,MAAIC,EAAAA,EAAAA,GAAAT,IACxCA,EAAKU,YAAcV,EAAKU,YAAYF,MAAIC,EAAAA,EAAAA,GAAAT,IAAOA,CACjD,CA+DC,OA/DAW,EAAAA,EAAAA,GAAAf,EAAA,EAAAgB,IAAA,cAAAC,MAED,SAAYC,GACVC,KAAKC,SAAS,CACZZ,kBAAkB,EAClBC,aAAcS,GAElB,GAAC,CAAAF,IAAA,cAAAC,MAED,SAAYI,GACVF,KAAKC,SAAS,CACZZ,kBAAkB,EAClBC,kBAAcC,GAElB,GAAC,CAAAM,IAAA,SAAAC,MAED,WAA2B,IAADK,EAAAC,EAAAC,EAAAC,EAAA,KACxB,OACEC,EAAAA,EAAAA,MAAA,OAAK,cAAY,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAWC,GAAG,YAAWH,UACtCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBAELC,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CACJC,KAAMb,KAAKZ,MAAMC,iBACjByB,MAA8B,QAAzBX,EAAEH,KAAKZ,MAAME,oBAAY,IAAAa,OAAA,EAAvBA,EAAyBW,MAChCC,QAAQ,EACRC,SAAUhB,KAAKL,YACfsB,MAAO,IACPC,UAAQ,EAAAV,UAERC,EAAAA,EAAAA,KAAA,UACEC,UAAU,eACVS,IAA4B,QAAzBf,EAAEJ,KAAKZ,MAAME,oBAAY,IAAAc,OAAA,EAAvBA,EAAyBgB,MAC9BN,MAA8B,QAAzBT,EAAEL,KAAKZ,MAAME,oBAAY,IAAAe,OAAA,EAAvBA,EAAyBS,MAChCO,MAAM,sGACNC,iBAAe,OAGnBb,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,QAAQ,SAAQhB,UACnBC,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAAAjB,UACFC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAGnBD,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,QAAQ,SAAQhB,UACnBC,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACC,KAAM,GAAGlB,UACZC,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACb,UAAU,gBAAeF,SAC3BmB,EAAAA,GAAAA,KAAiB,SAAC5B,GAAK,OACtBU,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACG,GAAI,EAAEpB,UACTC,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CACHC,WAAS,EACTpB,UAAU,aACVqB,QAAS,kBAAMzB,EAAKd,YAAYO,EAAM,EACtCiC,OAAOvB,EAAAA,EAAAA,KAAA,OAAKwB,IAAKlC,EAAMmC,MAAOf,IAAKpB,EAAMoC,MAAQ3B,UAEjDC,EAAAA,EAAAA,KAACoB,EAAAA,EAAAA,KAAS,CAACf,MAAOf,EAAMe,WAPXf,EAAMY,GASjB,YAOpB,KAAC9B,CAAA,CAzEW,CAASuD,EAAAA,U","sources":["components/practice/practice.tsx"],"sourcesContent":["import { Card, Col, Modal, Row } from \"antd\";\nimport React from \"react\";\nimport PracticeData from \"../../interface/practice\";\nimport { practiceData } from \"../../mock/mock-data\";\nimport \"./practice.scss\";\n\ninterface PracticeProps {}\n\ninterface PracticeState {\n  showCurrentWatch: boolean;\n  currentWatch: PracticeData | undefined;\n}\n\nclass Practice extends React.Component<PracticeProps, PracticeState> {\n  constructor(props: PracticeProps) {\n    super(props);\n    this.state = {\n      showCurrentWatch: false,\n      currentWatch: undefined,\n    };\n\n    this.handleWatch = this.handleWatch.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleWatch(guide: PracticeData): void {\n    this.setState({\n      showCurrentWatch: true,\n      currentWatch: guide,\n    });\n  }\n\n  handleClose(e: any) {\n    this.setState({\n      showCurrentWatch: false,\n      currentWatch: undefined,\n    });\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div data-testid=\"Practice\">\n        <div className=\"headline\" id=\"practices\">\n          <p>Coding Practices</p>\n        </div>\n        <Modal\n          open={this.state.showCurrentWatch}\n          title={this.state.currentWatch?.title}\n          footer={false}\n          onCancel={this.handleClose}\n          width={1000}\n          centered\n        >\n          <iframe\n            className=\"video-player\"\n            src={this.state.currentWatch?.video}\n            title={this.state.currentWatch?.title}\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n            allowFullScreen\n          />\n        </Modal>\n        <Row justify=\"center\">\n          <Col>\n            <div className=\"triangle\" />\n          </Col>\n        </Row>\n        <Row justify=\"center\">\n          <Col span={20}>\n            <Row className=\"guide-content\">\n              {practiceData.map((guide) => (\n                <Col sm={8} key={guide.id}>\n                  <Card\n                    hoverable\n                    className=\"guide-item\"\n                    onClick={() => this.handleWatch(guide)}\n                    cover={<img alt={guide.hover} src={guide.img} />}\n                  >\n                    <Card.Meta title={guide.title} />\n                  </Card>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Practice;\n"],"names":["_React$Component","_inherits","Practice","_super","_createSuper","props","_this","_classCallCheck","call","state","showCurrentWatch","currentWatch","undefined","handleWatch","bind","_assertThisInitialized","handleClose","_createClass","key","value","guide","this","setState","e","_this$state$currentWa","_this$state$currentWa2","_this$state$currentWa3","_this2","_jsxs","children","_jsx","className","id","Modal","open","title","footer","onCancel","width","centered","src","video","allow","allowFullScreen","Row","justify","Col","span","practiceData","sm","Card","hoverable","onClick","cover","alt","hover","img","React"],"sourceRoot":""}