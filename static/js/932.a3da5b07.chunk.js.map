{"version":3,"file":"static/js/932.a3da5b07.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.12\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_possibleConstructorReturn","self","call","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","result","Super","getPrototypeOf","NewTarget","this","constructor","arguments","apply","_get","get","bind","property","receiver","base","object","hasOwnProperty","desc","getOwnPropertyDescriptor","value","_getPrototypeOf","o","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_super","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","resolveCSSVariables","obj","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}